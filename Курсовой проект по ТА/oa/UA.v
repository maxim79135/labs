// WARNING: Do NOT edit the input and output ports in this file in a text
// editor if you plan to continue editing the block that represents it in
// the Block Editor! File corruption is VERY likely to occur.

// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.


// Generated by Quartus II Version 9.1 (Build Build 350 03/24/2010)
// Created on Fri Mar 23 09:21:33 2018

//  Module Declaration
module UA
(
	// {{ALTERA_ARGS_BEGIN}} DO NOT REMOVE THIS LINE!
	clk, p, clkout, Z, y
	// {{ALTERA_ARGS_END}} DO NOT REMOVE THIS LINE!
);
// Port Declaration

	// {{ALTERA_IO_BEGIN}} DO NOT REMOVE THIS LINE!
	input clk;
	input [9:0] p;
	output clkout;
	output Z;
	output [10:0] y;
	// {{ALTERA_IO_END}} DO NOT REMOVE THIS LINE!

integer pc = 0;  
reg [10:0] y;    
wire clkout;    
reg Z = 0;         
assign clkout = !clk; 
always @(posedge clk)

begin
case (pc)

0:begin
//Обнуление и запись множимого
	y=11'b00000000101;
	pc = pc + 1;
end 

1:begin
//Проверка на 0
	if (p[2] == 0)
	begin
		y = 11'b00100000000;
		pc = pc + 1;
	end
	else 
	begin
		y = 11'b10000000000;
		Z = 1;
		pc = 1000;
	end
end

2:begin
//Запись множителя
	y = 11'b00000000110;
	pc = pc + 1; 	
end

3:begin
//Проверка на 0 множитель
	if (p[1] == 0)
	begin
		y = 11'b00100000000;
		pc = pc + 1; 
	end
	else
	begin
		y = 11'b10000000001;
		Z = 1;
		pc = 1000;
	end
end

4:begin
	//ловим пмр
	if (p[7] == 1) 
	begin
		y = 11'b10000000001;
		Z = 1;
		pc = 1000;
	end 
	else
	begin
		//ловим ПРС
		if (p[5] == 1)
		begin
			y = 11'b01000000000;
			pc = 1000;
		end
		else
		begin
			y = 11'b00000000000;
			pc = 5; 
		end
	end
end

5:begin
	if (p[0] == 1)
	begin
		y = 11'b0001010000; //y4, y6 сложение
		pc = pc + 1;
	end
	else
	begin
		y = 11'b0000000000;
		pc = pc + 1;
	end
end

6:begin
	if (p[8] == 0)//ieii?aiea oeeea p8 = 1
	begin
		y = 11'b00000001000; //y3 сдвиг
		pc = 5;
	end
	else
	begin
		y = 11'b00000000000;
		pc = 7;
	end
end

7:begin
// коррекция
		if (p[4] == 1)
		begin
			y = 11'b00011010000;
		end
		pc = pc + 1;
end

8:begin
	if (p[3] == 1) // коррекция
	begin
		y = 11'b00010010000;
	end
	pc = pc + 1;
end

9:begin
	if (p[9] == 0) //нормализация 0
	begin
		y = 11'b00000100000;
		pc = pc + 1;
	end
	else
	begin
		if(p[6] == 1) //временное прс 1
		begin
			y = 11'b01000000000;
			pc = 1000;
		end
		else
		begin
			y = 11'b10000000000;
			Z = 1;
			pc = 1000;
		end
	end
end

10:begin
	if (p[7] == 1) //пмр при нормализации
	begin
		y = 11'b00000000001;
		pc = 11;
	end
	else
	begin
		y = 11'b10000000000;
		Z = 1;
		pc = 1000;
	end
	// если была нормализация
end

11:begin
	y = 11'b10000000000;
	Z = 1;
	pc = 1000;
end

endcase;
end

endmodule
